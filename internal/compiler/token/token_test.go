package token

import (
	"github.com/fuyu-lang/fuyu/internal/chx"
	"testing"
)

func TestIsComment(t *testing.T) {
	chx.True(t, Comment.IsComment())
	chx.False(t, Space.IsComment())
	chx.False(t, Newline.IsComment())
	chx.False(t, IdentArg.IsComment())
	chx.False(t, IdentConst.IsComment())
	chx.False(t, IdentField.IsComment())
	chx.False(t, IdentMethodPost.IsComment())
	chx.False(t, IdentMethodSpecial.IsComment())
	chx.False(t, IdentSink.IsComment())
	chx.False(t, IdentStrand.IsComment())
	chx.False(t, IdentVar.IsComment())
	chx.False(t, Abstract.IsComment())
	chx.False(t, Always.IsComment())
	chx.False(t, As.IsComment())
	chx.False(t, Async.IsComment())
	chx.False(t, Await.IsComment())
	chx.False(t, Break.IsComment())
	chx.False(t, Cons.IsComment())
	chx.False(t, Def.IsComment())
	chx.False(t, Do.IsComment())
	chx.False(t, Elif.IsComment())
	chx.False(t, Else.IsComment())
	chx.False(t, If.IsComment())
	chx.False(t, Import.IsComment())
	chx.False(t, In.IsComment())
	chx.False(t, Let.IsComment())
	chx.False(t, Panic.IsComment())
	chx.False(t, Pass.IsComment())
	chx.False(t, Pub.IsComment())
	chx.False(t, Recover.IsComment())
	chx.False(t, Redo.IsComment())
	chx.False(t, Retry.IsComment())
	chx.False(t, Return.IsComment())
	chx.False(t, SelfBig.IsComment())
	chx.False(t, SelfLittle.IsComment())
	chx.False(t, Then.IsComment())
	chx.False(t, Trait.IsComment())
	chx.False(t, Try.IsComment())
	chx.False(t, Type.IsComment())
	chx.False(t, Unless.IsComment())
	chx.False(t, Bytes.IsComment())
	chx.False(t, Complex.IsComment())
	chx.False(t, Float.IsComment())
	chx.False(t, Int.IsComment())
	chx.False(t, Nil.IsComment())
	chx.False(t, StringDouble.IsComment())
	chx.False(t, StringDoubleBlock.IsComment())
	chx.False(t, StringSingle.IsComment())
	chx.False(t, StringSingleBlock.IsComment())
	chx.False(t, Symbol.IsComment())
	chx.False(t, Add.IsComment())
	chx.False(t, AddAssign.IsComment())
	chx.False(t, Assign.IsComment())
	chx.False(t, BitAnd.IsComment())
	chx.False(t, BitAndAssign.IsComment())
	chx.False(t, BitOr.IsComment())
	chx.False(t, BitOrAssign.IsComment())
	chx.False(t, BitXor.IsComment())
	chx.False(t, BitXorAssign.IsComment())
	chx.False(t, Coalesce.IsComment())
	chx.False(t, CoalesceAssign.IsComment())
	chx.False(t, Compare.IsComment())
	chx.False(t, Concat.IsComment())
	chx.False(t, ConcatAssign.IsComment())
	chx.False(t, Div.IsComment())
	chx.False(t, DivAssign.IsComment())
	chx.False(t, DivFloor.IsComment())
	chx.False(t, DivFloorAssign.IsComment())
	chx.False(t, Eq.IsComment())
	chx.False(t, Exp.IsComment())
	chx.False(t, ExpAssign.IsComment())
	chx.False(t, Ge.IsComment())
	chx.False(t, GroupAssign.IsComment())
	chx.False(t, Gt.IsComment())
	chx.False(t, Le.IsComment())
	chx.False(t, LogicAnd.IsComment())
	chx.False(t, LogicOr.IsComment())
	chx.False(t, Lt.IsComment())
	chx.False(t, Mod.IsComment())
	chx.False(t, ModAssign.IsComment())
	chx.False(t, Mul.IsComment())
	chx.False(t, MulAssign.IsComment())
	chx.False(t, Ne.IsComment())
	chx.False(t, RangeExc.IsComment())
	chx.False(t, RangeInc.IsComment())
	chx.False(t, ShiftLeft.IsComment())
	chx.False(t, ShiftLeftAssign.IsComment())
	chx.False(t, ShiftRight.IsComment())
	chx.False(t, ShiftRightAssign.IsComment())
	chx.False(t, Sub.IsComment())
	chx.False(t, SubAssign.IsComment())
	chx.False(t, BitNot.IsComment())
	chx.False(t, Block.IsComment())
	chx.False(t, BlockBang.IsComment())
	chx.False(t, LogicNot.IsComment())
	chx.False(t, Neg.IsComment())
	chx.False(t, Pos.IsComment())
	chx.False(t, Splat.IsComment())
	chx.False(t, SplatMap.IsComment())
	chx.False(t, Arrow.IsComment())
	chx.False(t, Bang.IsComment())
	chx.False(t, Colon.IsComment())
	chx.False(t, Dot.IsComment())
	chx.False(t, LBrace.IsComment())
	chx.False(t, LBrack.IsComment())
	chx.False(t, LParen.IsComment())
	chx.False(t, Pipe.IsComment())
	chx.False(t, PipeTo.IsComment())
	chx.False(t, RBrace.IsComment())
	chx.False(t, RBrack.IsComment())
	chx.False(t, Rparen.IsComment())
	chx.False(t, SplatAll.IsComment())
}

func TestIsSpace(t *testing.T) {
	chx.False(t, Comment.IsSpace())
	chx.True(t, Space.IsSpace())
	chx.False(t, Newline.IsSpace())
	chx.False(t, IdentArg.IsSpace())
	chx.False(t, IdentConst.IsSpace())
	chx.False(t, IdentField.IsSpace())
	chx.False(t, IdentMethodPost.IsSpace())
	chx.False(t, IdentMethodSpecial.IsSpace())
	chx.False(t, IdentSink.IsSpace())
	chx.False(t, IdentStrand.IsSpace())
	chx.False(t, IdentVar.IsSpace())
	chx.False(t, Abstract.IsSpace())
	chx.False(t, Always.IsSpace())
	chx.False(t, As.IsSpace())
	chx.False(t, Async.IsSpace())
	chx.False(t, Await.IsSpace())
	chx.False(t, Break.IsSpace())
	chx.False(t, Cons.IsSpace())
	chx.False(t, Def.IsSpace())
	chx.False(t, Do.IsSpace())
	chx.False(t, Elif.IsSpace())
	chx.False(t, Else.IsSpace())
	chx.False(t, If.IsSpace())
	chx.False(t, Import.IsSpace())
	chx.False(t, In.IsSpace())
	chx.False(t, Let.IsSpace())
	chx.False(t, Panic.IsSpace())
	chx.False(t, Pass.IsSpace())
	chx.False(t, Pub.IsSpace())
	chx.False(t, Recover.IsSpace())
	chx.False(t, Redo.IsSpace())
	chx.False(t, Retry.IsSpace())
	chx.False(t, Return.IsSpace())
	chx.False(t, SelfBig.IsSpace())
	chx.False(t, SelfLittle.IsSpace())
	chx.False(t, Then.IsSpace())
	chx.False(t, Trait.IsSpace())
	chx.False(t, Try.IsSpace())
	chx.False(t, Type.IsSpace())
	chx.False(t, Unless.IsSpace())
	chx.False(t, Bytes.IsSpace())
	chx.False(t, Complex.IsSpace())
	chx.False(t, Float.IsSpace())
	chx.False(t, Int.IsSpace())
	chx.False(t, Nil.IsSpace())
	chx.False(t, StringDouble.IsSpace())
	chx.False(t, StringDoubleBlock.IsSpace())
	chx.False(t, StringSingle.IsSpace())
	chx.False(t, StringSingleBlock.IsSpace())
	chx.False(t, Symbol.IsSpace())
	chx.False(t, Add.IsSpace())
	chx.False(t, AddAssign.IsSpace())
	chx.False(t, Assign.IsSpace())
	chx.False(t, BitAnd.IsSpace())
	chx.False(t, BitAndAssign.IsSpace())
	chx.False(t, BitOr.IsSpace())
	chx.False(t, BitOrAssign.IsSpace())
	chx.False(t, BitXor.IsSpace())
	chx.False(t, BitXorAssign.IsSpace())
	chx.False(t, Coalesce.IsSpace())
	chx.False(t, CoalesceAssign.IsSpace())
	chx.False(t, Compare.IsSpace())
	chx.False(t, Concat.IsSpace())
	chx.False(t, ConcatAssign.IsSpace())
	chx.False(t, Div.IsSpace())
	chx.False(t, DivAssign.IsSpace())
	chx.False(t, DivFloor.IsSpace())
	chx.False(t, DivFloorAssign.IsSpace())
	chx.False(t, Eq.IsSpace())
	chx.False(t, Exp.IsSpace())
	chx.False(t, ExpAssign.IsSpace())
	chx.False(t, Ge.IsSpace())
	chx.False(t, GroupAssign.IsSpace())
	chx.False(t, Gt.IsSpace())
	chx.False(t, Le.IsSpace())
	chx.False(t, LogicAnd.IsSpace())
	chx.False(t, LogicOr.IsSpace())
	chx.False(t, Lt.IsSpace())
	chx.False(t, Mod.IsSpace())
	chx.False(t, ModAssign.IsSpace())
	chx.False(t, Mul.IsSpace())
	chx.False(t, MulAssign.IsSpace())
	chx.False(t, Ne.IsSpace())
	chx.False(t, RangeExc.IsSpace())
	chx.False(t, RangeInc.IsSpace())
	chx.False(t, ShiftLeft.IsSpace())
	chx.False(t, ShiftLeftAssign.IsSpace())
	chx.False(t, ShiftRight.IsSpace())
	chx.False(t, ShiftRightAssign.IsSpace())
	chx.False(t, Sub.IsSpace())
	chx.False(t, SubAssign.IsSpace())
	chx.False(t, BitNot.IsSpace())
	chx.False(t, Block.IsSpace())
	chx.False(t, BlockBang.IsSpace())
	chx.False(t, LogicNot.IsSpace())
	chx.False(t, Neg.IsSpace())
	chx.False(t, Pos.IsSpace())
	chx.False(t, Splat.IsSpace())
	chx.False(t, SplatMap.IsSpace())
	chx.False(t, Arrow.IsSpace())
	chx.False(t, Bang.IsSpace())
	chx.False(t, Colon.IsSpace())
	chx.False(t, Dot.IsSpace())
	chx.False(t, LBrace.IsSpace())
	chx.False(t, LBrack.IsSpace())
	chx.False(t, LParen.IsSpace())
	chx.False(t, Pipe.IsSpace())
	chx.False(t, PipeTo.IsSpace())
	chx.False(t, RBrace.IsSpace())
	chx.False(t, RBrack.IsSpace())
	chx.False(t, Rparen.IsSpace())
	chx.False(t, SplatAll.IsSpace())
}

func TestIsNewline(t *testing.T) {
	chx.False(t, Comment.IsNewline())
	chx.False(t, Space.IsNewline())
	chx.True(t, Newline.IsNewline())
	chx.False(t, IdentArg.IsNewline())
	chx.False(t, IdentConst.IsNewline())
	chx.False(t, IdentField.IsNewline())
	chx.False(t, IdentMethodPost.IsNewline())
	chx.False(t, IdentMethodSpecial.IsNewline())
	chx.False(t, IdentSink.IsNewline())
	chx.False(t, IdentStrand.IsNewline())
	chx.False(t, IdentVar.IsNewline())
	chx.False(t, Abstract.IsNewline())
	chx.False(t, Always.IsNewline())
	chx.False(t, As.IsNewline())
	chx.False(t, Async.IsNewline())
	chx.False(t, Await.IsNewline())
	chx.False(t, Break.IsNewline())
	chx.False(t, Cons.IsNewline())
	chx.False(t, Def.IsNewline())
	chx.False(t, Do.IsNewline())
	chx.False(t, Elif.IsNewline())
	chx.False(t, Else.IsNewline())
	chx.False(t, If.IsNewline())
	chx.False(t, Import.IsNewline())
	chx.False(t, In.IsNewline())
	chx.False(t, Let.IsNewline())
	chx.False(t, Panic.IsNewline())
	chx.False(t, Pass.IsNewline())
	chx.False(t, Pub.IsNewline())
	chx.False(t, Recover.IsNewline())
	chx.False(t, Redo.IsNewline())
	chx.False(t, Retry.IsNewline())
	chx.False(t, Return.IsNewline())
	chx.False(t, SelfBig.IsNewline())
	chx.False(t, SelfLittle.IsNewline())
	chx.False(t, Then.IsNewline())
	chx.False(t, Trait.IsNewline())
	chx.False(t, Try.IsNewline())
	chx.False(t, Type.IsNewline())
	chx.False(t, Unless.IsNewline())
	chx.False(t, Bytes.IsNewline())
	chx.False(t, Complex.IsNewline())
	chx.False(t, Float.IsNewline())
	chx.False(t, Int.IsNewline())
	chx.False(t, Nil.IsNewline())
	chx.False(t, StringDouble.IsNewline())
	chx.False(t, StringDoubleBlock.IsNewline())
	chx.False(t, StringSingle.IsNewline())
	chx.False(t, StringSingleBlock.IsNewline())
	chx.False(t, Symbol.IsNewline())
	chx.False(t, Add.IsNewline())
	chx.False(t, AddAssign.IsNewline())
	chx.False(t, Assign.IsNewline())
	chx.False(t, BitAnd.IsNewline())
	chx.False(t, BitAndAssign.IsNewline())
	chx.False(t, BitOr.IsNewline())
	chx.False(t, BitOrAssign.IsNewline())
	chx.False(t, BitXor.IsNewline())
	chx.False(t, BitXorAssign.IsNewline())
	chx.False(t, Coalesce.IsNewline())
	chx.False(t, CoalesceAssign.IsNewline())
	chx.False(t, Compare.IsNewline())
	chx.False(t, Concat.IsNewline())
	chx.False(t, ConcatAssign.IsNewline())
	chx.False(t, Div.IsNewline())
	chx.False(t, DivAssign.IsNewline())
	chx.False(t, DivFloor.IsNewline())
	chx.False(t, DivFloorAssign.IsNewline())
	chx.False(t, Eq.IsNewline())
	chx.False(t, Exp.IsNewline())
	chx.False(t, ExpAssign.IsNewline())
	chx.False(t, Ge.IsNewline())
	chx.False(t, GroupAssign.IsNewline())
	chx.False(t, Gt.IsNewline())
	chx.False(t, Le.IsNewline())
	chx.False(t, LogicAnd.IsNewline())
	chx.False(t, LogicOr.IsNewline())
	chx.False(t, Lt.IsNewline())
	chx.False(t, Mod.IsNewline())
	chx.False(t, ModAssign.IsNewline())
	chx.False(t, Mul.IsNewline())
	chx.False(t, MulAssign.IsNewline())
	chx.False(t, Ne.IsNewline())
	chx.False(t, RangeExc.IsNewline())
	chx.False(t, RangeInc.IsNewline())
	chx.False(t, ShiftLeft.IsNewline())
	chx.False(t, ShiftLeftAssign.IsNewline())
	chx.False(t, ShiftRight.IsNewline())
	chx.False(t, ShiftRightAssign.IsNewline())
	chx.False(t, Sub.IsNewline())
	chx.False(t, SubAssign.IsNewline())
	chx.False(t, BitNot.IsNewline())
	chx.False(t, Block.IsNewline())
	chx.False(t, BlockBang.IsNewline())
	chx.False(t, LogicNot.IsNewline())
	chx.False(t, Neg.IsNewline())
	chx.False(t, Pos.IsNewline())
	chx.False(t, Splat.IsNewline())
	chx.False(t, SplatMap.IsNewline())
	chx.False(t, Arrow.IsNewline())
	chx.False(t, Bang.IsNewline())
	chx.False(t, Colon.IsNewline())
	chx.False(t, Dot.IsNewline())
	chx.False(t, LBrace.IsNewline())
	chx.False(t, LBrack.IsNewline())
	chx.False(t, LParen.IsNewline())
	chx.False(t, Pipe.IsNewline())
	chx.False(t, PipeTo.IsNewline())
	chx.False(t, RBrace.IsNewline())
	chx.False(t, RBrack.IsNewline())
	chx.False(t, Rparen.IsNewline())
	chx.False(t, SplatAll.IsNewline())
}

func TestIsIdent(t *testing.T) {
	chx.False(t, Comment.IsIdent())
	chx.False(t, Space.IsIdent())
	chx.False(t, Newline.IsIdent())
	chx.True(t, IdentArg.IsIdent())
	chx.True(t, IdentConst.IsIdent())
	chx.True(t, IdentField.IsIdent())
	chx.True(t, IdentMethodPost.IsIdent())
	chx.True(t, IdentMethodSpecial.IsIdent())
	chx.True(t, IdentSink.IsIdent())
	chx.True(t, IdentStrand.IsIdent())
	chx.True(t, IdentVar.IsIdent())
	chx.False(t, Abstract.IsIdent())
	chx.False(t, Always.IsIdent())
	chx.False(t, As.IsIdent())
	chx.False(t, Async.IsIdent())
	chx.False(t, Await.IsIdent())
	chx.False(t, Break.IsIdent())
	chx.False(t, Cons.IsIdent())
	chx.False(t, Def.IsIdent())
	chx.False(t, Do.IsIdent())
	chx.False(t, Elif.IsIdent())
	chx.False(t, Else.IsIdent())
	chx.False(t, If.IsIdent())
	chx.False(t, Import.IsIdent())
	chx.False(t, In.IsIdent())
	chx.False(t, Let.IsIdent())
	chx.False(t, Panic.IsIdent())
	chx.False(t, Pass.IsIdent())
	chx.False(t, Pub.IsIdent())
	chx.False(t, Recover.IsIdent())
	chx.False(t, Redo.IsIdent())
	chx.False(t, Retry.IsIdent())
	chx.False(t, Return.IsIdent())
	chx.False(t, SelfBig.IsIdent())
	chx.False(t, SelfLittle.IsIdent())
	chx.False(t, Then.IsIdent())
	chx.False(t, Trait.IsIdent())
	chx.False(t, Try.IsIdent())
	chx.False(t, Type.IsIdent())
	chx.False(t, Unless.IsIdent())
	chx.False(t, Bytes.IsIdent())
	chx.False(t, Complex.IsIdent())
	chx.False(t, Float.IsIdent())
	chx.False(t, Int.IsIdent())
	chx.False(t, Nil.IsIdent())
	chx.False(t, StringDouble.IsIdent())
	chx.False(t, StringDoubleBlock.IsIdent())
	chx.False(t, StringSingle.IsIdent())
	chx.False(t, StringSingleBlock.IsIdent())
	chx.False(t, Symbol.IsIdent())
	chx.False(t, Add.IsIdent())
	chx.False(t, AddAssign.IsIdent())
	chx.False(t, Assign.IsIdent())
	chx.False(t, BitAnd.IsIdent())
	chx.False(t, BitAndAssign.IsIdent())
	chx.False(t, BitOr.IsIdent())
	chx.False(t, BitOrAssign.IsIdent())
	chx.False(t, BitXor.IsIdent())
	chx.False(t, BitXorAssign.IsIdent())
	chx.False(t, Coalesce.IsIdent())
	chx.False(t, CoalesceAssign.IsIdent())
	chx.False(t, Compare.IsIdent())
	chx.False(t, Concat.IsIdent())
	chx.False(t, ConcatAssign.IsIdent())
	chx.False(t, Div.IsIdent())
	chx.False(t, DivAssign.IsIdent())
	chx.False(t, DivFloor.IsIdent())
	chx.False(t, DivFloorAssign.IsIdent())
	chx.False(t, Eq.IsIdent())
	chx.False(t, Exp.IsIdent())
	chx.False(t, ExpAssign.IsIdent())
	chx.False(t, Ge.IsIdent())
	chx.False(t, GroupAssign.IsIdent())
	chx.False(t, Gt.IsIdent())
	chx.False(t, Le.IsIdent())
	chx.False(t, LogicAnd.IsIdent())
	chx.False(t, LogicOr.IsIdent())
	chx.False(t, Lt.IsIdent())
	chx.False(t, Mod.IsIdent())
	chx.False(t, ModAssign.IsIdent())
	chx.False(t, Mul.IsIdent())
	chx.False(t, MulAssign.IsIdent())
	chx.False(t, Ne.IsIdent())
	chx.False(t, RangeExc.IsIdent())
	chx.False(t, RangeInc.IsIdent())
	chx.False(t, ShiftLeft.IsIdent())
	chx.False(t, ShiftLeftAssign.IsIdent())
	chx.False(t, ShiftRight.IsIdent())
	chx.False(t, ShiftRightAssign.IsIdent())
	chx.False(t, Sub.IsIdent())
	chx.False(t, SubAssign.IsIdent())
	chx.False(t, BitNot.IsIdent())
	chx.False(t, Block.IsIdent())
	chx.False(t, BlockBang.IsIdent())
	chx.False(t, LogicNot.IsIdent())
	chx.False(t, Neg.IsIdent())
	chx.False(t, Pos.IsIdent())
	chx.False(t, Splat.IsIdent())
	chx.False(t, SplatMap.IsIdent())
	chx.False(t, Arrow.IsIdent())
	chx.False(t, Bang.IsIdent())
	chx.False(t, Colon.IsIdent())
	chx.False(t, Dot.IsIdent())
	chx.False(t, LBrace.IsIdent())
	chx.False(t, LBrack.IsIdent())
	chx.False(t, LParen.IsIdent())
	chx.False(t, Pipe.IsIdent())
	chx.False(t, PipeTo.IsIdent())
	chx.False(t, RBrace.IsIdent())
	chx.False(t, RBrack.IsIdent())
	chx.False(t, Rparen.IsIdent())
	chx.False(t, SplatAll.IsIdent())
}

func TestIsKeyword(t *testing.T) {
	chx.False(t, Comment.IsKeyword())
	chx.False(t, Space.IsKeyword())
	chx.False(t, Newline.IsKeyword())
	chx.False(t, IdentArg.IsKeyword())
	chx.False(t, IdentConst.IsKeyword())
	chx.False(t, IdentField.IsKeyword())
	chx.False(t, IdentMethodPost.IsKeyword())
	chx.False(t, IdentMethodSpecial.IsKeyword())
	chx.False(t, IdentSink.IsKeyword())
	chx.False(t, IdentStrand.IsKeyword())
	chx.False(t, IdentVar.IsKeyword())
	chx.True(t, Abstract.IsKeyword())
	chx.True(t, Always.IsKeyword())
	chx.True(t, As.IsKeyword())
	chx.True(t, Async.IsKeyword())
	chx.True(t, Await.IsKeyword())
	chx.True(t, Break.IsKeyword())
	chx.True(t, Cons.IsKeyword())
	chx.True(t, Def.IsKeyword())
	chx.True(t, Do.IsKeyword())
	chx.True(t, Elif.IsKeyword())
	chx.True(t, Else.IsKeyword())
	chx.True(t, If.IsKeyword())
	chx.True(t, Import.IsKeyword())
	chx.True(t, In.IsKeyword())
	chx.True(t, Let.IsKeyword())
	chx.True(t, Panic.IsKeyword())
	chx.True(t, Pass.IsKeyword())
	chx.True(t, Pub.IsKeyword())
	chx.True(t, Recover.IsKeyword())
	chx.True(t, Redo.IsKeyword())
	chx.True(t, Retry.IsKeyword())
	chx.True(t, Return.IsKeyword())
	chx.True(t, SelfBig.IsKeyword())
	chx.True(t, SelfLittle.IsKeyword())
	chx.True(t, Then.IsKeyword())
	chx.True(t, Trait.IsKeyword())
	chx.True(t, Try.IsKeyword())
	chx.True(t, Type.IsKeyword())
	chx.True(t, Unless.IsKeyword())
	chx.False(t, Bytes.IsKeyword())
	chx.False(t, Complex.IsKeyword())
	chx.False(t, Float.IsKeyword())
	chx.False(t, Int.IsKeyword())
	chx.False(t, Nil.IsKeyword())
	chx.False(t, StringDouble.IsKeyword())
	chx.False(t, StringDoubleBlock.IsKeyword())
	chx.False(t, StringSingle.IsKeyword())
	chx.False(t, StringSingleBlock.IsKeyword())
	chx.False(t, Symbol.IsKeyword())
	chx.False(t, Add.IsKeyword())
	chx.False(t, AddAssign.IsKeyword())
	chx.False(t, Assign.IsKeyword())
	chx.False(t, BitAnd.IsKeyword())
	chx.False(t, BitAndAssign.IsKeyword())
	chx.False(t, BitOr.IsKeyword())
	chx.False(t, BitOrAssign.IsKeyword())
	chx.False(t, BitXor.IsKeyword())
	chx.False(t, BitXorAssign.IsKeyword())
	chx.False(t, Coalesce.IsKeyword())
	chx.False(t, CoalesceAssign.IsKeyword())
	chx.False(t, Compare.IsKeyword())
	chx.False(t, Concat.IsKeyword())
	chx.False(t, ConcatAssign.IsKeyword())
	chx.False(t, Div.IsKeyword())
	chx.False(t, DivAssign.IsKeyword())
	chx.False(t, DivFloor.IsKeyword())
	chx.False(t, DivFloorAssign.IsKeyword())
	chx.False(t, Eq.IsKeyword())
	chx.False(t, Exp.IsKeyword())
	chx.False(t, ExpAssign.IsKeyword())
	chx.False(t, Ge.IsKeyword())
	chx.False(t, GroupAssign.IsKeyword())
	chx.False(t, Gt.IsKeyword())
	chx.False(t, Le.IsKeyword())
	chx.False(t, LogicAnd.IsKeyword())
	chx.False(t, LogicOr.IsKeyword())
	chx.False(t, Lt.IsKeyword())
	chx.False(t, Mod.IsKeyword())
	chx.False(t, ModAssign.IsKeyword())
	chx.False(t, Mul.IsKeyword())
	chx.False(t, MulAssign.IsKeyword())
	chx.False(t, Ne.IsKeyword())
	chx.False(t, RangeExc.IsKeyword())
	chx.False(t, RangeInc.IsKeyword())
	chx.False(t, ShiftLeft.IsKeyword())
	chx.False(t, ShiftLeftAssign.IsKeyword())
	chx.False(t, ShiftRight.IsKeyword())
	chx.False(t, ShiftRightAssign.IsKeyword())
	chx.False(t, Sub.IsKeyword())
	chx.False(t, SubAssign.IsKeyword())
	chx.False(t, BitNot.IsKeyword())
	chx.False(t, Block.IsKeyword())
	chx.False(t, BlockBang.IsKeyword())
	chx.False(t, LogicNot.IsKeyword())
	chx.False(t, Neg.IsKeyword())
	chx.False(t, Pos.IsKeyword())
	chx.False(t, Splat.IsKeyword())
	chx.False(t, SplatMap.IsKeyword())
	chx.False(t, Arrow.IsKeyword())
	chx.False(t, Bang.IsKeyword())
	chx.False(t, Colon.IsKeyword())
	chx.False(t, Dot.IsKeyword())
	chx.False(t, LBrace.IsKeyword())
	chx.False(t, LBrack.IsKeyword())
	chx.False(t, LParen.IsKeyword())
	chx.False(t, Pipe.IsKeyword())
	chx.False(t, PipeTo.IsKeyword())
	chx.False(t, RBrace.IsKeyword())
	chx.False(t, RBrack.IsKeyword())
	chx.False(t, Rparen.IsKeyword())
	chx.False(t, SplatAll.IsKeyword())
}

func TestIsLiteral(t *testing.T) {
	chx.False(t, Comment.IsLiteral())
	chx.False(t, Space.IsLiteral())
	chx.False(t, Newline.IsLiteral())
	chx.False(t, IdentArg.IsLiteral())
	chx.False(t, IdentConst.IsLiteral())
	chx.False(t, IdentField.IsLiteral())
	chx.False(t, IdentMethodPost.IsLiteral())
	chx.False(t, IdentMethodSpecial.IsLiteral())
	chx.False(t, IdentSink.IsLiteral())
	chx.False(t, IdentStrand.IsLiteral())
	chx.False(t, IdentVar.IsLiteral())
	chx.False(t, Abstract.IsLiteral())
	chx.False(t, Always.IsLiteral())
	chx.False(t, As.IsLiteral())
	chx.False(t, Async.IsLiteral())
	chx.False(t, Await.IsLiteral())
	chx.False(t, Break.IsLiteral())
	chx.False(t, Cons.IsLiteral())
	chx.False(t, Def.IsLiteral())
	chx.False(t, Do.IsLiteral())
	chx.False(t, Elif.IsLiteral())
	chx.False(t, Else.IsLiteral())
	chx.False(t, If.IsLiteral())
	chx.False(t, Import.IsLiteral())
	chx.False(t, In.IsLiteral())
	chx.False(t, Let.IsLiteral())
	chx.False(t, Panic.IsLiteral())
	chx.False(t, Pass.IsLiteral())
	chx.False(t, Pub.IsLiteral())
	chx.False(t, Recover.IsLiteral())
	chx.False(t, Redo.IsLiteral())
	chx.False(t, Retry.IsLiteral())
	chx.False(t, Return.IsLiteral())
	chx.False(t, SelfBig.IsLiteral())
	chx.False(t, SelfLittle.IsLiteral())
	chx.False(t, Then.IsLiteral())
	chx.False(t, Trait.IsLiteral())
	chx.False(t, Try.IsLiteral())
	chx.False(t, Type.IsLiteral())
	chx.False(t, Unless.IsLiteral())
	chx.True(t, Bytes.IsLiteral())
	chx.True(t, Complex.IsLiteral())
	chx.True(t, Float.IsLiteral())
	chx.True(t, Int.IsLiteral())
	chx.True(t, Nil.IsLiteral())
	chx.True(t, StringDouble.IsLiteral())
	chx.True(t, StringDoubleBlock.IsLiteral())
	chx.True(t, StringSingle.IsLiteral())
	chx.True(t, StringSingleBlock.IsLiteral())
	chx.True(t, Symbol.IsLiteral())
	chx.False(t, Add.IsLiteral())
	chx.False(t, AddAssign.IsLiteral())
	chx.False(t, Assign.IsLiteral())
	chx.False(t, BitAnd.IsLiteral())
	chx.False(t, BitAndAssign.IsLiteral())
	chx.False(t, BitOr.IsLiteral())
	chx.False(t, BitOrAssign.IsLiteral())
	chx.False(t, BitXor.IsLiteral())
	chx.False(t, BitXorAssign.IsLiteral())
	chx.False(t, Coalesce.IsLiteral())
	chx.False(t, CoalesceAssign.IsLiteral())
	chx.False(t, Compare.IsLiteral())
	chx.False(t, Concat.IsLiteral())
	chx.False(t, ConcatAssign.IsLiteral())
	chx.False(t, Div.IsLiteral())
	chx.False(t, DivAssign.IsLiteral())
	chx.False(t, DivFloor.IsLiteral())
	chx.False(t, DivFloorAssign.IsLiteral())
	chx.False(t, Eq.IsLiteral())
	chx.False(t, Exp.IsLiteral())
	chx.False(t, ExpAssign.IsLiteral())
	chx.False(t, Ge.IsLiteral())
	chx.False(t, GroupAssign.IsLiteral())
	chx.False(t, Gt.IsLiteral())
	chx.False(t, Le.IsLiteral())
	chx.False(t, LogicAnd.IsLiteral())
	chx.False(t, LogicOr.IsLiteral())
	chx.False(t, Lt.IsLiteral())
	chx.False(t, Mod.IsLiteral())
	chx.False(t, ModAssign.IsLiteral())
	chx.False(t, Mul.IsLiteral())
	chx.False(t, MulAssign.IsLiteral())
	chx.False(t, Ne.IsLiteral())
	chx.False(t, RangeExc.IsLiteral())
	chx.False(t, RangeInc.IsLiteral())
	chx.False(t, ShiftLeft.IsLiteral())
	chx.False(t, ShiftLeftAssign.IsLiteral())
	chx.False(t, ShiftRight.IsLiteral())
	chx.False(t, ShiftRightAssign.IsLiteral())
	chx.False(t, Sub.IsLiteral())
	chx.False(t, SubAssign.IsLiteral())
	chx.False(t, BitNot.IsLiteral())
	chx.False(t, Block.IsLiteral())
	chx.False(t, BlockBang.IsLiteral())
	chx.False(t, LogicNot.IsLiteral())
	chx.False(t, Neg.IsLiteral())
	chx.False(t, Pos.IsLiteral())
	chx.False(t, Splat.IsLiteral())
	chx.False(t, SplatMap.IsLiteral())
	chx.False(t, Arrow.IsLiteral())
	chx.False(t, Bang.IsLiteral())
	chx.False(t, Colon.IsLiteral())
	chx.False(t, Dot.IsLiteral())
	chx.False(t, LBrace.IsLiteral())
	chx.False(t, LBrack.IsLiteral())
	chx.False(t, LParen.IsLiteral())
	chx.False(t, Pipe.IsLiteral())
	chx.False(t, PipeTo.IsLiteral())
	chx.False(t, RBrace.IsLiteral())
	chx.False(t, RBrack.IsLiteral())
	chx.False(t, Rparen.IsLiteral())
	chx.False(t, SplatAll.IsLiteral())
}

func TestIsBinary(t *testing.T) {
	chx.False(t, Comment.IsBinary())
	chx.False(t, Space.IsBinary())
	chx.False(t, Newline.IsBinary())
	chx.False(t, IdentArg.IsBinary())
	chx.False(t, IdentConst.IsBinary())
	chx.False(t, IdentField.IsBinary())
	chx.False(t, IdentMethodPost.IsBinary())
	chx.False(t, IdentMethodSpecial.IsBinary())
	chx.False(t, IdentSink.IsBinary())
	chx.False(t, IdentStrand.IsBinary())
	chx.False(t, IdentVar.IsBinary())
	chx.False(t, Abstract.IsBinary())
	chx.False(t, Always.IsBinary())
	chx.False(t, As.IsBinary())
	chx.False(t, Async.IsBinary())
	chx.False(t, Await.IsBinary())
	chx.False(t, Break.IsBinary())
	chx.False(t, Cons.IsBinary())
	chx.False(t, Def.IsBinary())
	chx.False(t, Do.IsBinary())
	chx.False(t, Elif.IsBinary())
	chx.False(t, Else.IsBinary())
	chx.False(t, If.IsBinary())
	chx.False(t, Import.IsBinary())
	chx.False(t, In.IsBinary())
	chx.False(t, Let.IsBinary())
	chx.False(t, Panic.IsBinary())
	chx.False(t, Pass.IsBinary())
	chx.False(t, Pub.IsBinary())
	chx.False(t, Recover.IsBinary())
	chx.False(t, Redo.IsBinary())
	chx.False(t, Retry.IsBinary())
	chx.False(t, Return.IsBinary())
	chx.False(t, SelfBig.IsBinary())
	chx.False(t, SelfLittle.IsBinary())
	chx.False(t, Then.IsBinary())
	chx.False(t, Trait.IsBinary())
	chx.False(t, Try.IsBinary())
	chx.False(t, Type.IsBinary())
	chx.False(t, Unless.IsBinary())
	chx.False(t, Bytes.IsBinary())
	chx.False(t, Complex.IsBinary())
	chx.False(t, Float.IsBinary())
	chx.False(t, Int.IsBinary())
	chx.False(t, Nil.IsBinary())
	chx.False(t, StringDouble.IsBinary())
	chx.False(t, StringDoubleBlock.IsBinary())
	chx.False(t, StringSingle.IsBinary())
	chx.False(t, StringSingleBlock.IsBinary())
	chx.False(t, Symbol.IsBinary())
	chx.True(t, Add.IsBinary())
	chx.True(t, AddAssign.IsBinary())
	chx.True(t, Assign.IsBinary())
	chx.True(t, BitAnd.IsBinary())
	chx.True(t, BitAndAssign.IsBinary())
	chx.True(t, BitOr.IsBinary())
	chx.True(t, BitOrAssign.IsBinary())
	chx.True(t, BitXor.IsBinary())
	chx.True(t, BitXorAssign.IsBinary())
	chx.True(t, Coalesce.IsBinary())
	chx.True(t, CoalesceAssign.IsBinary())
	chx.True(t, Compare.IsBinary())
	chx.True(t, Concat.IsBinary())
	chx.True(t, ConcatAssign.IsBinary())
	chx.True(t, Div.IsBinary())
	chx.True(t, DivAssign.IsBinary())
	chx.True(t, DivFloor.IsBinary())
	chx.True(t, DivFloorAssign.IsBinary())
	chx.True(t, Eq.IsBinary())
	chx.True(t, Exp.IsBinary())
	chx.True(t, ExpAssign.IsBinary())
	chx.True(t, Ge.IsBinary())
	chx.True(t, GroupAssign.IsBinary())
	chx.True(t, Gt.IsBinary())
	chx.True(t, Le.IsBinary())
	chx.True(t, LogicAnd.IsBinary())
	chx.True(t, LogicOr.IsBinary())
	chx.True(t, Lt.IsBinary())
	chx.True(t, Mod.IsBinary())
	chx.True(t, ModAssign.IsBinary())
	chx.True(t, Mul.IsBinary())
	chx.True(t, MulAssign.IsBinary())
	chx.True(t, Ne.IsBinary())
	chx.True(t, RangeExc.IsBinary())
	chx.True(t, RangeInc.IsBinary())
	chx.True(t, ShiftLeft.IsBinary())
	chx.True(t, ShiftLeftAssign.IsBinary())
	chx.True(t, ShiftRight.IsBinary())
	chx.True(t, ShiftRightAssign.IsBinary())
	chx.True(t, Sub.IsBinary())
	chx.True(t, SubAssign.IsBinary())
	chx.False(t, BitNot.IsBinary())
	chx.False(t, Block.IsBinary())
	chx.False(t, BlockBang.IsBinary())
	chx.False(t, LogicNot.IsBinary())
	chx.False(t, Neg.IsBinary())
	chx.False(t, Pos.IsBinary())
	chx.False(t, Splat.IsBinary())
	chx.False(t, SplatMap.IsBinary())
	chx.False(t, Arrow.IsBinary())
	chx.False(t, Bang.IsBinary())
	chx.False(t, Colon.IsBinary())
	chx.False(t, Dot.IsBinary())
	chx.False(t, LBrace.IsBinary())
	chx.False(t, LBrack.IsBinary())
	chx.False(t, LParen.IsBinary())
	chx.False(t, Pipe.IsBinary())
	chx.False(t, PipeTo.IsBinary())
	chx.False(t, RBrace.IsBinary())
	chx.False(t, RBrack.IsBinary())
	chx.False(t, Rparen.IsBinary())
	chx.False(t, SplatAll.IsBinary())
}

func TestIsUnary(t *testing.T) {
	chx.False(t, Comment.IsUnary())
	chx.False(t, Space.IsUnary())
	chx.False(t, Newline.IsUnary())
	chx.False(t, IdentArg.IsUnary())
	chx.False(t, IdentConst.IsUnary())
	chx.False(t, IdentField.IsUnary())
	chx.False(t, IdentMethodPost.IsUnary())
	chx.False(t, IdentMethodSpecial.IsUnary())
	chx.False(t, IdentSink.IsUnary())
	chx.False(t, IdentStrand.IsUnary())
	chx.False(t, IdentVar.IsUnary())
	chx.False(t, Abstract.IsUnary())
	chx.False(t, Always.IsUnary())
	chx.False(t, As.IsUnary())
	chx.False(t, Async.IsUnary())
	chx.False(t, Await.IsUnary())
	chx.False(t, Break.IsUnary())
	chx.False(t, Cons.IsUnary())
	chx.False(t, Def.IsUnary())
	chx.False(t, Do.IsUnary())
	chx.False(t, Elif.IsUnary())
	chx.False(t, Else.IsUnary())
	chx.False(t, If.IsUnary())
	chx.False(t, Import.IsUnary())
	chx.False(t, In.IsUnary())
	chx.False(t, Let.IsUnary())
	chx.False(t, Panic.IsUnary())
	chx.False(t, Pass.IsUnary())
	chx.False(t, Pub.IsUnary())
	chx.False(t, Recover.IsUnary())
	chx.False(t, Redo.IsUnary())
	chx.False(t, Retry.IsUnary())
	chx.False(t, Return.IsUnary())
	chx.False(t, SelfBig.IsUnary())
	chx.False(t, SelfLittle.IsUnary())
	chx.False(t, Then.IsUnary())
	chx.False(t, Trait.IsUnary())
	chx.False(t, Try.IsUnary())
	chx.False(t, Type.IsUnary())
	chx.False(t, Unless.IsUnary())
	chx.False(t, Bytes.IsUnary())
	chx.False(t, Complex.IsUnary())
	chx.False(t, Float.IsUnary())
	chx.False(t, Int.IsUnary())
	chx.False(t, Nil.IsUnary())
	chx.False(t, StringDouble.IsUnary())
	chx.False(t, StringDoubleBlock.IsUnary())
	chx.False(t, StringSingle.IsUnary())
	chx.False(t, StringSingleBlock.IsUnary())
	chx.False(t, Symbol.IsUnary())
	chx.False(t, Add.IsUnary())
	chx.False(t, AddAssign.IsUnary())
	chx.False(t, Assign.IsUnary())
	chx.False(t, BitAnd.IsUnary())
	chx.False(t, BitAndAssign.IsUnary())
	chx.False(t, BitOr.IsUnary())
	chx.False(t, BitOrAssign.IsUnary())
	chx.False(t, BitXor.IsUnary())
	chx.False(t, BitXorAssign.IsUnary())
	chx.False(t, Coalesce.IsUnary())
	chx.False(t, CoalesceAssign.IsUnary())
	chx.False(t, Compare.IsUnary())
	chx.False(t, Concat.IsUnary())
	chx.False(t, ConcatAssign.IsUnary())
	chx.False(t, Div.IsUnary())
	chx.False(t, DivAssign.IsUnary())
	chx.False(t, DivFloor.IsUnary())
	chx.False(t, DivFloorAssign.IsUnary())
	chx.False(t, Eq.IsUnary())
	chx.False(t, Exp.IsUnary())
	chx.False(t, ExpAssign.IsUnary())
	chx.False(t, Ge.IsUnary())
	chx.False(t, GroupAssign.IsUnary())
	chx.False(t, Gt.IsUnary())
	chx.False(t, Le.IsUnary())
	chx.False(t, LogicAnd.IsUnary())
	chx.False(t, LogicOr.IsUnary())
	chx.False(t, Lt.IsUnary())
	chx.False(t, Mod.IsUnary())
	chx.False(t, ModAssign.IsUnary())
	chx.False(t, Mul.IsUnary())
	chx.False(t, MulAssign.IsUnary())
	chx.False(t, Ne.IsUnary())
	chx.False(t, RangeExc.IsUnary())
	chx.False(t, RangeInc.IsUnary())
	chx.False(t, ShiftLeft.IsUnary())
	chx.False(t, ShiftLeftAssign.IsUnary())
	chx.False(t, ShiftRight.IsUnary())
	chx.False(t, ShiftRightAssign.IsUnary())
	chx.False(t, Sub.IsUnary())
	chx.False(t, SubAssign.IsUnary())
	chx.True(t, BitNot.IsUnary())
	chx.True(t, Block.IsUnary())
	chx.True(t, BlockBang.IsUnary())
	chx.True(t, LogicNot.IsUnary())
	chx.True(t, Neg.IsUnary())
	chx.True(t, Pos.IsUnary())
	chx.True(t, Splat.IsUnary())
	chx.True(t, SplatMap.IsUnary())
	chx.False(t, Arrow.IsUnary())
	chx.False(t, Bang.IsUnary())
	chx.False(t, Colon.IsUnary())
	chx.False(t, Dot.IsUnary())
	chx.False(t, LBrace.IsUnary())
	chx.False(t, LBrack.IsUnary())
	chx.False(t, LParen.IsUnary())
	chx.False(t, Pipe.IsUnary())
	chx.False(t, PipeTo.IsUnary())
	chx.False(t, RBrace.IsUnary())
	chx.False(t, RBrack.IsUnary())
	chx.False(t, Rparen.IsUnary())
	chx.False(t, SplatAll.IsUnary())
}

func TestIsPunc(t *testing.T) {
	chx.False(t, Comment.IsPunc())
	chx.False(t, Space.IsPunc())
	chx.False(t, Newline.IsPunc())
	chx.False(t, IdentArg.IsPunc())
	chx.False(t, IdentConst.IsPunc())
	chx.False(t, IdentField.IsPunc())
	chx.False(t, IdentMethodPost.IsPunc())
	chx.False(t, IdentMethodSpecial.IsPunc())
	chx.False(t, IdentSink.IsPunc())
	chx.False(t, IdentStrand.IsPunc())
	chx.False(t, IdentVar.IsPunc())
	chx.False(t, Abstract.IsPunc())
	chx.False(t, Always.IsPunc())
	chx.False(t, As.IsPunc())
	chx.False(t, Async.IsPunc())
	chx.False(t, Await.IsPunc())
	chx.False(t, Break.IsPunc())
	chx.False(t, Cons.IsPunc())
	chx.False(t, Def.IsPunc())
	chx.False(t, Do.IsPunc())
	chx.False(t, Elif.IsPunc())
	chx.False(t, Else.IsPunc())
	chx.False(t, If.IsPunc())
	chx.False(t, Import.IsPunc())
	chx.False(t, In.IsPunc())
	chx.False(t, Let.IsPunc())
	chx.False(t, Panic.IsPunc())
	chx.False(t, Pass.IsPunc())
	chx.False(t, Pub.IsPunc())
	chx.False(t, Recover.IsPunc())
	chx.False(t, Redo.IsPunc())
	chx.False(t, Retry.IsPunc())
	chx.False(t, Return.IsPunc())
	chx.False(t, SelfBig.IsPunc())
	chx.False(t, SelfLittle.IsPunc())
	chx.False(t, Then.IsPunc())
	chx.False(t, Trait.IsPunc())
	chx.False(t, Try.IsPunc())
	chx.False(t, Type.IsPunc())
	chx.False(t, Unless.IsPunc())
	chx.False(t, Bytes.IsPunc())
	chx.False(t, Complex.IsPunc())
	chx.False(t, Float.IsPunc())
	chx.False(t, Int.IsPunc())
	chx.False(t, Nil.IsPunc())
	chx.False(t, StringDouble.IsPunc())
	chx.False(t, StringDoubleBlock.IsPunc())
	chx.False(t, StringSingle.IsPunc())
	chx.False(t, StringSingleBlock.IsPunc())
	chx.False(t, Symbol.IsPunc())
	chx.False(t, Add.IsPunc())
	chx.False(t, AddAssign.IsPunc())
	chx.False(t, Assign.IsPunc())
	chx.False(t, BitAnd.IsPunc())
	chx.False(t, BitAndAssign.IsPunc())
	chx.False(t, BitOr.IsPunc())
	chx.False(t, BitOrAssign.IsPunc())
	chx.False(t, BitXor.IsPunc())
	chx.False(t, BitXorAssign.IsPunc())
	chx.False(t, Coalesce.IsPunc())
	chx.False(t, CoalesceAssign.IsPunc())
	chx.False(t, Compare.IsPunc())
	chx.False(t, Concat.IsPunc())
	chx.False(t, ConcatAssign.IsPunc())
	chx.False(t, Div.IsPunc())
	chx.False(t, DivAssign.IsPunc())
	chx.False(t, DivFloor.IsPunc())
	chx.False(t, DivFloorAssign.IsPunc())
	chx.False(t, Eq.IsPunc())
	chx.False(t, Exp.IsPunc())
	chx.False(t, ExpAssign.IsPunc())
	chx.False(t, Ge.IsPunc())
	chx.False(t, GroupAssign.IsPunc())
	chx.False(t, Gt.IsPunc())
	chx.False(t, Le.IsPunc())
	chx.False(t, LogicAnd.IsPunc())
	chx.False(t, LogicOr.IsPunc())
	chx.False(t, Lt.IsPunc())
	chx.False(t, Mod.IsPunc())
	chx.False(t, ModAssign.IsPunc())
	chx.False(t, Mul.IsPunc())
	chx.False(t, MulAssign.IsPunc())
	chx.False(t, Ne.IsPunc())
	chx.False(t, RangeExc.IsPunc())
	chx.False(t, RangeInc.IsPunc())
	chx.False(t, ShiftLeft.IsPunc())
	chx.False(t, ShiftLeftAssign.IsPunc())
	chx.False(t, ShiftRight.IsPunc())
	chx.False(t, ShiftRightAssign.IsPunc())
	chx.False(t, Sub.IsPunc())
	chx.False(t, SubAssign.IsPunc())
	chx.False(t, BitNot.IsPunc())
	chx.False(t, Block.IsPunc())
	chx.False(t, BlockBang.IsPunc())
	chx.False(t, LogicNot.IsPunc())
	chx.False(t, Neg.IsPunc())
	chx.False(t, Pos.IsPunc())
	chx.False(t, Splat.IsPunc())
	chx.False(t, SplatMap.IsPunc())
	chx.True(t, Arrow.IsPunc())
	chx.True(t, Bang.IsPunc())
	chx.True(t, Colon.IsPunc())
	chx.True(t, Dot.IsPunc())
	chx.True(t, LBrace.IsPunc())
	chx.True(t, LBrack.IsPunc())
	chx.True(t, LParen.IsPunc())
	chx.True(t, Pipe.IsPunc())
	chx.True(t, PipeTo.IsPunc())
	chx.True(t, RBrace.IsPunc())
	chx.True(t, RBrack.IsPunc())
	chx.True(t, Rparen.IsPunc())
	chx.True(t, SplatAll.IsPunc())
}
